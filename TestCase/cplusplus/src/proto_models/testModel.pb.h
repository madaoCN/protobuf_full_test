// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_models/testModel.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_5fmodels_2ftestModel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_5fmodels_2ftestModel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_5fmodels_2ftestModel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_5fmodels_2ftestModel_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_5fmodels_2ftestModel_2eproto;
namespace testModel {
class AddressBook;
class AddressBookDefaultTypeInternal;
extern AddressBookDefaultTypeInternal _AddressBook_default_instance_;
class DoubleModel;
class DoubleModelDefaultTypeInternal;
extern DoubleModelDefaultTypeInternal _DoubleModel_default_instance_;
class FloatListModel;
class FloatListModelDefaultTypeInternal;
extern FloatListModelDefaultTypeInternal _FloatListModel_default_instance_;
class Int64Model;
class Int64ModelDefaultTypeInternal;
extern Int64ModelDefaultTypeInternal _Int64Model_default_instance_;
class IntListModel;
class IntListModelDefaultTypeInternal;
extern IntListModelDefaultTypeInternal _IntListModel_default_instance_;
class Person;
class PersonDefaultTypeInternal;
extern PersonDefaultTypeInternal _Person_default_instance_;
class Person_PhoneNumber;
class Person_PhoneNumberDefaultTypeInternal;
extern Person_PhoneNumberDefaultTypeInternal _Person_PhoneNumber_default_instance_;
class StringListModel;
class StringListModelDefaultTypeInternal;
extern StringListModelDefaultTypeInternal _StringListModel_default_instance_;
class StringModel;
class StringModelDefaultTypeInternal;
extern StringModelDefaultTypeInternal _StringModel_default_instance_;
class TenDoubleModel;
class TenDoubleModelDefaultTypeInternal;
extern TenDoubleModelDefaultTypeInternal _TenDoubleModel_default_instance_;
class TenInt64Model;
class TenInt64ModelDefaultTypeInternal;
extern TenInt64ModelDefaultTypeInternal _TenInt64Model_default_instance_;
class TenStringModel;
class TenStringModelDefaultTypeInternal;
extern TenStringModelDefaultTypeInternal _TenStringModel_default_instance_;
}  // namespace testModel
PROTOBUF_NAMESPACE_OPEN
template<> ::testModel::AddressBook* Arena::CreateMaybeMessage<::testModel::AddressBook>(Arena*);
template<> ::testModel::DoubleModel* Arena::CreateMaybeMessage<::testModel::DoubleModel>(Arena*);
template<> ::testModel::FloatListModel* Arena::CreateMaybeMessage<::testModel::FloatListModel>(Arena*);
template<> ::testModel::Int64Model* Arena::CreateMaybeMessage<::testModel::Int64Model>(Arena*);
template<> ::testModel::IntListModel* Arena::CreateMaybeMessage<::testModel::IntListModel>(Arena*);
template<> ::testModel::Person* Arena::CreateMaybeMessage<::testModel::Person>(Arena*);
template<> ::testModel::Person_PhoneNumber* Arena::CreateMaybeMessage<::testModel::Person_PhoneNumber>(Arena*);
template<> ::testModel::StringListModel* Arena::CreateMaybeMessage<::testModel::StringListModel>(Arena*);
template<> ::testModel::StringModel* Arena::CreateMaybeMessage<::testModel::StringModel>(Arena*);
template<> ::testModel::TenDoubleModel* Arena::CreateMaybeMessage<::testModel::TenDoubleModel>(Arena*);
template<> ::testModel::TenInt64Model* Arena::CreateMaybeMessage<::testModel::TenInt64Model>(Arena*);
template<> ::testModel::TenStringModel* Arena::CreateMaybeMessage<::testModel::TenStringModel>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace testModel {

// ===================================================================

class Int64Model PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:testModel.Int64Model) */ {
 public:
  inline Int64Model() : Int64Model(nullptr) {};
  virtual ~Int64Model();

  Int64Model(const Int64Model& from);
  Int64Model(Int64Model&& from) noexcept
    : Int64Model() {
    *this = ::std::move(from);
  }

  inline Int64Model& operator=(const Int64Model& from) {
    CopyFrom(from);
    return *this;
  }
  inline Int64Model& operator=(Int64Model&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Int64Model& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64Model* internal_default_instance() {
    return reinterpret_cast<const Int64Model*>(
               &_Int64Model_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Int64Model& a, Int64Model& b) {
    a.Swap(&b);
  }
  inline void Swap(Int64Model* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Int64Model* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Int64Model* New() const final {
    return CreateMaybeMessage<Int64Model>(nullptr);
  }

  Int64Model* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Int64Model>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Int64Model& from);
  void MergeFrom(const Int64Model& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int64Model* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "testModel.Int64Model";
  }
  protected:
  explicit Int64Model(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fmodels_2ftestModel_2eproto);
    return ::descriptor_table_proto_5fmodels_2ftestModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInt64ValueFieldNumber = 1,
  };
  // int64 int64Value = 1;
  void clear_int64value();
  ::PROTOBUF_NAMESPACE_ID::int64 int64value() const;
  void set_int64value(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64value() const;
  void _internal_set_int64value(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:testModel.Int64Model)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fmodels_2ftestModel_2eproto;
};
// -------------------------------------------------------------------

class TenInt64Model PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:testModel.TenInt64Model) */ {
 public:
  inline TenInt64Model() : TenInt64Model(nullptr) {};
  virtual ~TenInt64Model();

  TenInt64Model(const TenInt64Model& from);
  TenInt64Model(TenInt64Model&& from) noexcept
    : TenInt64Model() {
    *this = ::std::move(from);
  }

  inline TenInt64Model& operator=(const TenInt64Model& from) {
    CopyFrom(from);
    return *this;
  }
  inline TenInt64Model& operator=(TenInt64Model&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TenInt64Model& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TenInt64Model* internal_default_instance() {
    return reinterpret_cast<const TenInt64Model*>(
               &_TenInt64Model_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TenInt64Model& a, TenInt64Model& b) {
    a.Swap(&b);
  }
  inline void Swap(TenInt64Model* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TenInt64Model* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TenInt64Model* New() const final {
    return CreateMaybeMessage<TenInt64Model>(nullptr);
  }

  TenInt64Model* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TenInt64Model>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TenInt64Model& from);
  void MergeFrom(const TenInt64Model& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TenInt64Model* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "testModel.TenInt64Model";
  }
  protected:
  explicit TenInt64Model(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fmodels_2ftestModel_2eproto);
    return ::descriptor_table_proto_5fmodels_2ftestModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInt64Value1FieldNumber = 1,
    kInt64Value2FieldNumber = 2,
    kInt64Value3FieldNumber = 3,
    kInt64Value4FieldNumber = 4,
    kInt64Value5FieldNumber = 5,
    kInt64Value6FieldNumber = 6,
    kInt64Value7FieldNumber = 7,
    kInt64Value8FieldNumber = 8,
    kInt64Value9FieldNumber = 9,
    kInt64Value10FieldNumber = 10,
  };
  // int64 int64Value1 = 1;
  void clear_int64value1();
  ::PROTOBUF_NAMESPACE_ID::int64 int64value1() const;
  void set_int64value1(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64value1() const;
  void _internal_set_int64value1(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 int64Value2 = 2;
  void clear_int64value2();
  ::PROTOBUF_NAMESPACE_ID::int64 int64value2() const;
  void set_int64value2(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64value2() const;
  void _internal_set_int64value2(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 int64Value3 = 3;
  void clear_int64value3();
  ::PROTOBUF_NAMESPACE_ID::int64 int64value3() const;
  void set_int64value3(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64value3() const;
  void _internal_set_int64value3(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 int64Value4 = 4;
  void clear_int64value4();
  ::PROTOBUF_NAMESPACE_ID::int64 int64value4() const;
  void set_int64value4(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64value4() const;
  void _internal_set_int64value4(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 int64Value5 = 5;
  void clear_int64value5();
  ::PROTOBUF_NAMESPACE_ID::int64 int64value5() const;
  void set_int64value5(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64value5() const;
  void _internal_set_int64value5(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 int64Value6 = 6;
  void clear_int64value6();
  ::PROTOBUF_NAMESPACE_ID::int64 int64value6() const;
  void set_int64value6(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64value6() const;
  void _internal_set_int64value6(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 int64Value7 = 7;
  void clear_int64value7();
  ::PROTOBUF_NAMESPACE_ID::int64 int64value7() const;
  void set_int64value7(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64value7() const;
  void _internal_set_int64value7(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 int64Value8 = 8;
  void clear_int64value8();
  ::PROTOBUF_NAMESPACE_ID::int64 int64value8() const;
  void set_int64value8(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64value8() const;
  void _internal_set_int64value8(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 int64Value9 = 9;
  void clear_int64value9();
  ::PROTOBUF_NAMESPACE_ID::int64 int64value9() const;
  void set_int64value9(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64value9() const;
  void _internal_set_int64value9(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 int64Value10 = 10;
  void clear_int64value10();
  ::PROTOBUF_NAMESPACE_ID::int64 int64value10() const;
  void set_int64value10(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64value10() const;
  void _internal_set_int64value10(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:testModel.TenInt64Model)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64value1_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64value2_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64value3_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64value4_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64value5_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64value6_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64value7_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64value8_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64value9_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64value10_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fmodels_2ftestModel_2eproto;
};
// -------------------------------------------------------------------

class DoubleModel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:testModel.DoubleModel) */ {
 public:
  inline DoubleModel() : DoubleModel(nullptr) {};
  virtual ~DoubleModel();

  DoubleModel(const DoubleModel& from);
  DoubleModel(DoubleModel&& from) noexcept
    : DoubleModel() {
    *this = ::std::move(from);
  }

  inline DoubleModel& operator=(const DoubleModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline DoubleModel& operator=(DoubleModel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DoubleModel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DoubleModel* internal_default_instance() {
    return reinterpret_cast<const DoubleModel*>(
               &_DoubleModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DoubleModel& a, DoubleModel& b) {
    a.Swap(&b);
  }
  inline void Swap(DoubleModel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DoubleModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DoubleModel* New() const final {
    return CreateMaybeMessage<DoubleModel>(nullptr);
  }

  DoubleModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DoubleModel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DoubleModel& from);
  void MergeFrom(const DoubleModel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoubleModel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "testModel.DoubleModel";
  }
  protected:
  explicit DoubleModel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fmodels_2ftestModel_2eproto);
    return ::descriptor_table_proto_5fmodels_2ftestModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDoubleValueFieldNumber = 1,
  };
  // double doubleValue = 1;
  void clear_doublevalue();
  double doublevalue() const;
  void set_doublevalue(double value);
  private:
  double _internal_doublevalue() const;
  void _internal_set_doublevalue(double value);
  public:

  // @@protoc_insertion_point(class_scope:testModel.DoubleModel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double doublevalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fmodels_2ftestModel_2eproto;
};
// -------------------------------------------------------------------

class TenDoubleModel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:testModel.TenDoubleModel) */ {
 public:
  inline TenDoubleModel() : TenDoubleModel(nullptr) {};
  virtual ~TenDoubleModel();

  TenDoubleModel(const TenDoubleModel& from);
  TenDoubleModel(TenDoubleModel&& from) noexcept
    : TenDoubleModel() {
    *this = ::std::move(from);
  }

  inline TenDoubleModel& operator=(const TenDoubleModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline TenDoubleModel& operator=(TenDoubleModel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TenDoubleModel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TenDoubleModel* internal_default_instance() {
    return reinterpret_cast<const TenDoubleModel*>(
               &_TenDoubleModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(TenDoubleModel& a, TenDoubleModel& b) {
    a.Swap(&b);
  }
  inline void Swap(TenDoubleModel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TenDoubleModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TenDoubleModel* New() const final {
    return CreateMaybeMessage<TenDoubleModel>(nullptr);
  }

  TenDoubleModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TenDoubleModel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TenDoubleModel& from);
  void MergeFrom(const TenDoubleModel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TenDoubleModel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "testModel.TenDoubleModel";
  }
  protected:
  explicit TenDoubleModel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fmodels_2ftestModel_2eproto);
    return ::descriptor_table_proto_5fmodels_2ftestModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDoubleValue1FieldNumber = 1,
    kDoubleValue2FieldNumber = 2,
    kDoubleValue3FieldNumber = 3,
    kDoubleValue4FieldNumber = 4,
    kDoubleValue5FieldNumber = 5,
    kDoubleValue6FieldNumber = 6,
    kDoubleValue7FieldNumber = 7,
    kDoubleValue8FieldNumber = 8,
    kDoubleValue9FieldNumber = 9,
    kDoubleValue10FieldNumber = 10,
  };
  // double doubleValue1 = 1;
  void clear_doublevalue1();
  double doublevalue1() const;
  void set_doublevalue1(double value);
  private:
  double _internal_doublevalue1() const;
  void _internal_set_doublevalue1(double value);
  public:

  // double doubleValue2 = 2;
  void clear_doublevalue2();
  double doublevalue2() const;
  void set_doublevalue2(double value);
  private:
  double _internal_doublevalue2() const;
  void _internal_set_doublevalue2(double value);
  public:

  // double doubleValue3 = 3;
  void clear_doublevalue3();
  double doublevalue3() const;
  void set_doublevalue3(double value);
  private:
  double _internal_doublevalue3() const;
  void _internal_set_doublevalue3(double value);
  public:

  // double doubleValue4 = 4;
  void clear_doublevalue4();
  double doublevalue4() const;
  void set_doublevalue4(double value);
  private:
  double _internal_doublevalue4() const;
  void _internal_set_doublevalue4(double value);
  public:

  // double doubleValue5 = 5;
  void clear_doublevalue5();
  double doublevalue5() const;
  void set_doublevalue5(double value);
  private:
  double _internal_doublevalue5() const;
  void _internal_set_doublevalue5(double value);
  public:

  // double doubleValue6 = 6;
  void clear_doublevalue6();
  double doublevalue6() const;
  void set_doublevalue6(double value);
  private:
  double _internal_doublevalue6() const;
  void _internal_set_doublevalue6(double value);
  public:

  // double doubleValue7 = 7;
  void clear_doublevalue7();
  double doublevalue7() const;
  void set_doublevalue7(double value);
  private:
  double _internal_doublevalue7() const;
  void _internal_set_doublevalue7(double value);
  public:

  // double doubleValue8 = 8;
  void clear_doublevalue8();
  double doublevalue8() const;
  void set_doublevalue8(double value);
  private:
  double _internal_doublevalue8() const;
  void _internal_set_doublevalue8(double value);
  public:

  // double doubleValue9 = 9;
  void clear_doublevalue9();
  double doublevalue9() const;
  void set_doublevalue9(double value);
  private:
  double _internal_doublevalue9() const;
  void _internal_set_doublevalue9(double value);
  public:

  // double doubleValue10 = 10;
  void clear_doublevalue10();
  double doublevalue10() const;
  void set_doublevalue10(double value);
  private:
  double _internal_doublevalue10() const;
  void _internal_set_doublevalue10(double value);
  public:

  // @@protoc_insertion_point(class_scope:testModel.TenDoubleModel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double doublevalue1_;
  double doublevalue2_;
  double doublevalue3_;
  double doublevalue4_;
  double doublevalue5_;
  double doublevalue6_;
  double doublevalue7_;
  double doublevalue8_;
  double doublevalue9_;
  double doublevalue10_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fmodels_2ftestModel_2eproto;
};
// -------------------------------------------------------------------

class StringModel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:testModel.StringModel) */ {
 public:
  inline StringModel() : StringModel(nullptr) {};
  virtual ~StringModel();

  StringModel(const StringModel& from);
  StringModel(StringModel&& from) noexcept
    : StringModel() {
    *this = ::std::move(from);
  }

  inline StringModel& operator=(const StringModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline StringModel& operator=(StringModel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StringModel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringModel* internal_default_instance() {
    return reinterpret_cast<const StringModel*>(
               &_StringModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(StringModel& a, StringModel& b) {
    a.Swap(&b);
  }
  inline void Swap(StringModel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StringModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StringModel* New() const final {
    return CreateMaybeMessage<StringModel>(nullptr);
  }

  StringModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StringModel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StringModel& from);
  void MergeFrom(const StringModel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringModel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "testModel.StringModel";
  }
  protected:
  explicit StringModel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fmodels_2ftestModel_2eproto);
    return ::descriptor_table_proto_5fmodels_2ftestModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStringValueFieldNumber = 1,
  };
  // string stringValue = 1;
  void clear_stringvalue();
  const std::string& stringvalue() const;
  void set_stringvalue(const std::string& value);
  void set_stringvalue(std::string&& value);
  void set_stringvalue(const char* value);
  void set_stringvalue(const char* value, size_t size);
  std::string* mutable_stringvalue();
  std::string* release_stringvalue();
  void set_allocated_stringvalue(std::string* stringvalue);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_stringvalue();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stringvalue(
      std::string* stringvalue);
  private:
  const std::string& _internal_stringvalue() const;
  void _internal_set_stringvalue(const std::string& value);
  std::string* _internal_mutable_stringvalue();
  public:

  // @@protoc_insertion_point(class_scope:testModel.StringModel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fmodels_2ftestModel_2eproto;
};
// -------------------------------------------------------------------

class TenStringModel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:testModel.TenStringModel) */ {
 public:
  inline TenStringModel() : TenStringModel(nullptr) {};
  virtual ~TenStringModel();

  TenStringModel(const TenStringModel& from);
  TenStringModel(TenStringModel&& from) noexcept
    : TenStringModel() {
    *this = ::std::move(from);
  }

  inline TenStringModel& operator=(const TenStringModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline TenStringModel& operator=(TenStringModel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TenStringModel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TenStringModel* internal_default_instance() {
    return reinterpret_cast<const TenStringModel*>(
               &_TenStringModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(TenStringModel& a, TenStringModel& b) {
    a.Swap(&b);
  }
  inline void Swap(TenStringModel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TenStringModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TenStringModel* New() const final {
    return CreateMaybeMessage<TenStringModel>(nullptr);
  }

  TenStringModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TenStringModel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TenStringModel& from);
  void MergeFrom(const TenStringModel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TenStringModel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "testModel.TenStringModel";
  }
  protected:
  explicit TenStringModel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fmodels_2ftestModel_2eproto);
    return ::descriptor_table_proto_5fmodels_2ftestModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStringValue1FieldNumber = 1,
    kStringValue2FieldNumber = 2,
    kStringValue3FieldNumber = 3,
    kStringValue4FieldNumber = 4,
    kStringValue5FieldNumber = 5,
    kStringValue6FieldNumber = 6,
    kStringValue7FieldNumber = 7,
    kStringValue8FieldNumber = 8,
    kStringValue9FieldNumber = 9,
    kStringValue10FieldNumber = 10,
  };
  // string stringValue1 = 1;
  void clear_stringvalue1();
  const std::string& stringvalue1() const;
  void set_stringvalue1(const std::string& value);
  void set_stringvalue1(std::string&& value);
  void set_stringvalue1(const char* value);
  void set_stringvalue1(const char* value, size_t size);
  std::string* mutable_stringvalue1();
  std::string* release_stringvalue1();
  void set_allocated_stringvalue1(std::string* stringvalue1);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_stringvalue1();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stringvalue1(
      std::string* stringvalue1);
  private:
  const std::string& _internal_stringvalue1() const;
  void _internal_set_stringvalue1(const std::string& value);
  std::string* _internal_mutable_stringvalue1();
  public:

  // string stringValue2 = 2;
  void clear_stringvalue2();
  const std::string& stringvalue2() const;
  void set_stringvalue2(const std::string& value);
  void set_stringvalue2(std::string&& value);
  void set_stringvalue2(const char* value);
  void set_stringvalue2(const char* value, size_t size);
  std::string* mutable_stringvalue2();
  std::string* release_stringvalue2();
  void set_allocated_stringvalue2(std::string* stringvalue2);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_stringvalue2();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stringvalue2(
      std::string* stringvalue2);
  private:
  const std::string& _internal_stringvalue2() const;
  void _internal_set_stringvalue2(const std::string& value);
  std::string* _internal_mutable_stringvalue2();
  public:

  // string stringValue3 = 3;
  void clear_stringvalue3();
  const std::string& stringvalue3() const;
  void set_stringvalue3(const std::string& value);
  void set_stringvalue3(std::string&& value);
  void set_stringvalue3(const char* value);
  void set_stringvalue3(const char* value, size_t size);
  std::string* mutable_stringvalue3();
  std::string* release_stringvalue3();
  void set_allocated_stringvalue3(std::string* stringvalue3);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_stringvalue3();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stringvalue3(
      std::string* stringvalue3);
  private:
  const std::string& _internal_stringvalue3() const;
  void _internal_set_stringvalue3(const std::string& value);
  std::string* _internal_mutable_stringvalue3();
  public:

  // string stringValue4 = 4;
  void clear_stringvalue4();
  const std::string& stringvalue4() const;
  void set_stringvalue4(const std::string& value);
  void set_stringvalue4(std::string&& value);
  void set_stringvalue4(const char* value);
  void set_stringvalue4(const char* value, size_t size);
  std::string* mutable_stringvalue4();
  std::string* release_stringvalue4();
  void set_allocated_stringvalue4(std::string* stringvalue4);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_stringvalue4();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stringvalue4(
      std::string* stringvalue4);
  private:
  const std::string& _internal_stringvalue4() const;
  void _internal_set_stringvalue4(const std::string& value);
  std::string* _internal_mutable_stringvalue4();
  public:

  // string stringValue5 = 5;
  void clear_stringvalue5();
  const std::string& stringvalue5() const;
  void set_stringvalue5(const std::string& value);
  void set_stringvalue5(std::string&& value);
  void set_stringvalue5(const char* value);
  void set_stringvalue5(const char* value, size_t size);
  std::string* mutable_stringvalue5();
  std::string* release_stringvalue5();
  void set_allocated_stringvalue5(std::string* stringvalue5);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_stringvalue5();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stringvalue5(
      std::string* stringvalue5);
  private:
  const std::string& _internal_stringvalue5() const;
  void _internal_set_stringvalue5(const std::string& value);
  std::string* _internal_mutable_stringvalue5();
  public:

  // string stringValue6 = 6;
  void clear_stringvalue6();
  const std::string& stringvalue6() const;
  void set_stringvalue6(const std::string& value);
  void set_stringvalue6(std::string&& value);
  void set_stringvalue6(const char* value);
  void set_stringvalue6(const char* value, size_t size);
  std::string* mutable_stringvalue6();
  std::string* release_stringvalue6();
  void set_allocated_stringvalue6(std::string* stringvalue6);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_stringvalue6();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stringvalue6(
      std::string* stringvalue6);
  private:
  const std::string& _internal_stringvalue6() const;
  void _internal_set_stringvalue6(const std::string& value);
  std::string* _internal_mutable_stringvalue6();
  public:

  // string stringValue7 = 7;
  void clear_stringvalue7();
  const std::string& stringvalue7() const;
  void set_stringvalue7(const std::string& value);
  void set_stringvalue7(std::string&& value);
  void set_stringvalue7(const char* value);
  void set_stringvalue7(const char* value, size_t size);
  std::string* mutable_stringvalue7();
  std::string* release_stringvalue7();
  void set_allocated_stringvalue7(std::string* stringvalue7);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_stringvalue7();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stringvalue7(
      std::string* stringvalue7);
  private:
  const std::string& _internal_stringvalue7() const;
  void _internal_set_stringvalue7(const std::string& value);
  std::string* _internal_mutable_stringvalue7();
  public:

  // string stringValue8 = 8;
  void clear_stringvalue8();
  const std::string& stringvalue8() const;
  void set_stringvalue8(const std::string& value);
  void set_stringvalue8(std::string&& value);
  void set_stringvalue8(const char* value);
  void set_stringvalue8(const char* value, size_t size);
  std::string* mutable_stringvalue8();
  std::string* release_stringvalue8();
  void set_allocated_stringvalue8(std::string* stringvalue8);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_stringvalue8();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stringvalue8(
      std::string* stringvalue8);
  private:
  const std::string& _internal_stringvalue8() const;
  void _internal_set_stringvalue8(const std::string& value);
  std::string* _internal_mutable_stringvalue8();
  public:

  // string stringValue9 = 9;
  void clear_stringvalue9();
  const std::string& stringvalue9() const;
  void set_stringvalue9(const std::string& value);
  void set_stringvalue9(std::string&& value);
  void set_stringvalue9(const char* value);
  void set_stringvalue9(const char* value, size_t size);
  std::string* mutable_stringvalue9();
  std::string* release_stringvalue9();
  void set_allocated_stringvalue9(std::string* stringvalue9);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_stringvalue9();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stringvalue9(
      std::string* stringvalue9);
  private:
  const std::string& _internal_stringvalue9() const;
  void _internal_set_stringvalue9(const std::string& value);
  std::string* _internal_mutable_stringvalue9();
  public:

  // string stringValue10 = 10;
  void clear_stringvalue10();
  const std::string& stringvalue10() const;
  void set_stringvalue10(const std::string& value);
  void set_stringvalue10(std::string&& value);
  void set_stringvalue10(const char* value);
  void set_stringvalue10(const char* value, size_t size);
  std::string* mutable_stringvalue10();
  std::string* release_stringvalue10();
  void set_allocated_stringvalue10(std::string* stringvalue10);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_stringvalue10();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stringvalue10(
      std::string* stringvalue10);
  private:
  const std::string& _internal_stringvalue10() const;
  void _internal_set_stringvalue10(const std::string& value);
  std::string* _internal_mutable_stringvalue10();
  public:

  // @@protoc_insertion_point(class_scope:testModel.TenStringModel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue3_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue4_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue5_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue6_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue7_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue8_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue9_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue10_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fmodels_2ftestModel_2eproto;
};
// -------------------------------------------------------------------

class IntListModel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:testModel.IntListModel) */ {
 public:
  inline IntListModel() : IntListModel(nullptr) {};
  virtual ~IntListModel();

  IntListModel(const IntListModel& from);
  IntListModel(IntListModel&& from) noexcept
    : IntListModel() {
    *this = ::std::move(from);
  }

  inline IntListModel& operator=(const IntListModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntListModel& operator=(IntListModel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IntListModel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntListModel* internal_default_instance() {
    return reinterpret_cast<const IntListModel*>(
               &_IntListModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(IntListModel& a, IntListModel& b) {
    a.Swap(&b);
  }
  inline void Swap(IntListModel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IntListModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IntListModel* New() const final {
    return CreateMaybeMessage<IntListModel>(nullptr);
  }

  IntListModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IntListModel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IntListModel& from);
  void MergeFrom(const IntListModel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntListModel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "testModel.IntListModel";
  }
  protected:
  explicit IntListModel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fmodels_2ftestModel_2eproto);
    return ::descriptor_table_proto_5fmodels_2ftestModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIntValuesFieldNumber = 1,
  };
  // repeated int32 intValues = 1 [packed = true];
  int intvalues_size() const;
  private:
  int _internal_intvalues_size() const;
  public:
  void clear_intvalues();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_intvalues(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_intvalues() const;
  void _internal_add_intvalues(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_intvalues();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 intvalues(int index) const;
  void set_intvalues(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_intvalues(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      intvalues() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_intvalues();

  // @@protoc_insertion_point(class_scope:testModel.IntListModel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > intvalues_;
  mutable std::atomic<int> _intvalues_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fmodels_2ftestModel_2eproto;
};
// -------------------------------------------------------------------

class FloatListModel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:testModel.FloatListModel) */ {
 public:
  inline FloatListModel() : FloatListModel(nullptr) {};
  virtual ~FloatListModel();

  FloatListModel(const FloatListModel& from);
  FloatListModel(FloatListModel&& from) noexcept
    : FloatListModel() {
    *this = ::std::move(from);
  }

  inline FloatListModel& operator=(const FloatListModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatListModel& operator=(FloatListModel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FloatListModel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatListModel* internal_default_instance() {
    return reinterpret_cast<const FloatListModel*>(
               &_FloatListModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(FloatListModel& a, FloatListModel& b) {
    a.Swap(&b);
  }
  inline void Swap(FloatListModel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FloatListModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FloatListModel* New() const final {
    return CreateMaybeMessage<FloatListModel>(nullptr);
  }

  FloatListModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FloatListModel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FloatListModel& from);
  void MergeFrom(const FloatListModel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatListModel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "testModel.FloatListModel";
  }
  protected:
  explicit FloatListModel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fmodels_2ftestModel_2eproto);
    return ::descriptor_table_proto_5fmodels_2ftestModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFloatValuesFieldNumber = 1,
  };
  // repeated float floatValues = 1 [packed = true];
  int floatvalues_size() const;
  private:
  int _internal_floatvalues_size() const;
  public:
  void clear_floatvalues();
  private:
  float _internal_floatvalues(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_floatvalues() const;
  void _internal_add_floatvalues(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_floatvalues();
  public:
  float floatvalues(int index) const;
  void set_floatvalues(int index, float value);
  void add_floatvalues(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      floatvalues() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_floatvalues();

  // @@protoc_insertion_point(class_scope:testModel.FloatListModel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > floatvalues_;
  mutable std::atomic<int> _floatvalues_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fmodels_2ftestModel_2eproto;
};
// -------------------------------------------------------------------

class StringListModel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:testModel.StringListModel) */ {
 public:
  inline StringListModel() : StringListModel(nullptr) {};
  virtual ~StringListModel();

  StringListModel(const StringListModel& from);
  StringListModel(StringListModel&& from) noexcept
    : StringListModel() {
    *this = ::std::move(from);
  }

  inline StringListModel& operator=(const StringListModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline StringListModel& operator=(StringListModel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StringListModel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringListModel* internal_default_instance() {
    return reinterpret_cast<const StringListModel*>(
               &_StringListModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(StringListModel& a, StringListModel& b) {
    a.Swap(&b);
  }
  inline void Swap(StringListModel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StringListModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StringListModel* New() const final {
    return CreateMaybeMessage<StringListModel>(nullptr);
  }

  StringListModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StringListModel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StringListModel& from);
  void MergeFrom(const StringListModel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringListModel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "testModel.StringListModel";
  }
  protected:
  explicit StringListModel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fmodels_2ftestModel_2eproto);
    return ::descriptor_table_proto_5fmodels_2ftestModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStringValuesFieldNumber = 1,
  };
  // repeated string stringValues = 1;
  int stringvalues_size() const;
  private:
  int _internal_stringvalues_size() const;
  public:
  void clear_stringvalues();
  const std::string& stringvalues(int index) const;
  std::string* mutable_stringvalues(int index);
  void set_stringvalues(int index, const std::string& value);
  void set_stringvalues(int index, std::string&& value);
  void set_stringvalues(int index, const char* value);
  void set_stringvalues(int index, const char* value, size_t size);
  std::string* add_stringvalues();
  void add_stringvalues(const std::string& value);
  void add_stringvalues(std::string&& value);
  void add_stringvalues(const char* value);
  void add_stringvalues(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& stringvalues() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_stringvalues();
  private:
  const std::string& _internal_stringvalues(int index) const;
  std::string* _internal_add_stringvalues();
  public:

  // @@protoc_insertion_point(class_scope:testModel.StringListModel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> stringvalues_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fmodels_2ftestModel_2eproto;
};
// -------------------------------------------------------------------

class Person_PhoneNumber PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:testModel.Person.PhoneNumber) */ {
 public:
  inline Person_PhoneNumber() : Person_PhoneNumber(nullptr) {};
  virtual ~Person_PhoneNumber();

  Person_PhoneNumber(const Person_PhoneNumber& from);
  Person_PhoneNumber(Person_PhoneNumber&& from) noexcept
    : Person_PhoneNumber() {
    *this = ::std::move(from);
  }

  inline Person_PhoneNumber& operator=(const Person_PhoneNumber& from) {
    CopyFrom(from);
    return *this;
  }
  inline Person_PhoneNumber& operator=(Person_PhoneNumber&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Person_PhoneNumber& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Person_PhoneNumber* internal_default_instance() {
    return reinterpret_cast<const Person_PhoneNumber*>(
               &_Person_PhoneNumber_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Person_PhoneNumber& a, Person_PhoneNumber& b) {
    a.Swap(&b);
  }
  inline void Swap(Person_PhoneNumber* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Person_PhoneNumber* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Person_PhoneNumber* New() const final {
    return CreateMaybeMessage<Person_PhoneNumber>(nullptr);
  }

  Person_PhoneNumber* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Person_PhoneNumber>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Person_PhoneNumber& from);
  void MergeFrom(const Person_PhoneNumber& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Person_PhoneNumber* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "testModel.Person.PhoneNumber";
  }
  protected:
  explicit Person_PhoneNumber(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fmodels_2ftestModel_2eproto);
    return ::descriptor_table_proto_5fmodels_2ftestModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumberFieldNumber = 1,
  };
  // string number = 1;
  void clear_number();
  const std::string& number() const;
  void set_number(const std::string& value);
  void set_number(std::string&& value);
  void set_number(const char* value);
  void set_number(const char* value, size_t size);
  std::string* mutable_number();
  std::string* release_number();
  void set_allocated_number(std::string* number);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_number();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_number(
      std::string* number);
  private:
  const std::string& _internal_number() const;
  void _internal_set_number(const std::string& value);
  std::string* _internal_mutable_number();
  public:

  // @@protoc_insertion_point(class_scope:testModel.Person.PhoneNumber)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr number_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fmodels_2ftestModel_2eproto;
};
// -------------------------------------------------------------------

class Person PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:testModel.Person) */ {
 public:
  inline Person() : Person(nullptr) {};
  virtual ~Person();

  Person(const Person& from);
  Person(Person&& from) noexcept
    : Person() {
    *this = ::std::move(from);
  }

  inline Person& operator=(const Person& from) {
    CopyFrom(from);
    return *this;
  }
  inline Person& operator=(Person&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Person& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Person* internal_default_instance() {
    return reinterpret_cast<const Person*>(
               &_Person_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(Person& a, Person& b) {
    a.Swap(&b);
  }
  inline void Swap(Person* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Person* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Person* New() const final {
    return CreateMaybeMessage<Person>(nullptr);
  }

  Person* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Person>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Person& from);
  void MergeFrom(const Person& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Person* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "testModel.Person";
  }
  protected:
  explicit Person(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fmodels_2ftestModel_2eproto);
    return ::descriptor_table_proto_5fmodels_2ftestModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Person_PhoneNumber PhoneNumber;

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneFieldNumber = 4,
    kNameFieldNumber = 1,
    kEmailFieldNumber = 3,
    kIdFieldNumber = 2,
  };
  // repeated .testModel.Person.PhoneNumber phone = 4;
  int phone_size() const;
  private:
  int _internal_phone_size() const;
  public:
  void clear_phone();
  ::testModel::Person_PhoneNumber* mutable_phone(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::testModel::Person_PhoneNumber >*
      mutable_phone();
  private:
  const ::testModel::Person_PhoneNumber& _internal_phone(int index) const;
  ::testModel::Person_PhoneNumber* _internal_add_phone();
  public:
  const ::testModel::Person_PhoneNumber& phone(int index) const;
  ::testModel::Person_PhoneNumber* add_phone();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::testModel::Person_PhoneNumber >&
      phone() const;

  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string email = 3;
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_email();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_email(
      std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // float id = 2;
  void clear_id();
  float id() const;
  void set_id(float value);
  private:
  float _internal_id() const;
  void _internal_set_id(float value);
  public:

  // @@protoc_insertion_point(class_scope:testModel.Person)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::testModel::Person_PhoneNumber > phone_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  float id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fmodels_2ftestModel_2eproto;
};
// -------------------------------------------------------------------

class AddressBook PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:testModel.AddressBook) */ {
 public:
  inline AddressBook() : AddressBook(nullptr) {};
  virtual ~AddressBook();

  AddressBook(const AddressBook& from);
  AddressBook(AddressBook&& from) noexcept
    : AddressBook() {
    *this = ::std::move(from);
  }

  inline AddressBook& operator=(const AddressBook& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddressBook& operator=(AddressBook&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddressBook& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddressBook* internal_default_instance() {
    return reinterpret_cast<const AddressBook*>(
               &_AddressBook_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(AddressBook& a, AddressBook& b) {
    a.Swap(&b);
  }
  inline void Swap(AddressBook* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddressBook* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddressBook* New() const final {
    return CreateMaybeMessage<AddressBook>(nullptr);
  }

  AddressBook* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddressBook>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddressBook& from);
  void MergeFrom(const AddressBook& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddressBook* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "testModel.AddressBook";
  }
  protected:
  explicit AddressBook(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fmodels_2ftestModel_2eproto);
    return ::descriptor_table_proto_5fmodels_2ftestModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPersonFieldNumber = 1,
  };
  // repeated .testModel.Person person = 1;
  int person_size() const;
  private:
  int _internal_person_size() const;
  public:
  void clear_person();
  ::testModel::Person* mutable_person(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::testModel::Person >*
      mutable_person();
  private:
  const ::testModel::Person& _internal_person(int index) const;
  ::testModel::Person* _internal_add_person();
  public:
  const ::testModel::Person& person(int index) const;
  ::testModel::Person* add_person();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::testModel::Person >&
      person() const;

  // @@protoc_insertion_point(class_scope:testModel.AddressBook)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::testModel::Person > person_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fmodels_2ftestModel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Int64Model

// int64 int64Value = 1;
inline void Int64Model::clear_int64value() {
  int64value_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Int64Model::_internal_int64value() const {
  return int64value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Int64Model::int64value() const {
  // @@protoc_insertion_point(field_get:testModel.Int64Model.int64Value)
  return _internal_int64value();
}
inline void Int64Model::_internal_set_int64value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64value_ = value;
}
inline void Int64Model::set_int64value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64value(value);
  // @@protoc_insertion_point(field_set:testModel.Int64Model.int64Value)
}

// -------------------------------------------------------------------

// TenInt64Model

// int64 int64Value1 = 1;
inline void TenInt64Model::clear_int64value1() {
  int64value1_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::_internal_int64value1() const {
  return int64value1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::int64value1() const {
  // @@protoc_insertion_point(field_get:testModel.TenInt64Model.int64Value1)
  return _internal_int64value1();
}
inline void TenInt64Model::_internal_set_int64value1(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64value1_ = value;
}
inline void TenInt64Model::set_int64value1(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64value1(value);
  // @@protoc_insertion_point(field_set:testModel.TenInt64Model.int64Value1)
}

// int64 int64Value2 = 2;
inline void TenInt64Model::clear_int64value2() {
  int64value2_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::_internal_int64value2() const {
  return int64value2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::int64value2() const {
  // @@protoc_insertion_point(field_get:testModel.TenInt64Model.int64Value2)
  return _internal_int64value2();
}
inline void TenInt64Model::_internal_set_int64value2(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64value2_ = value;
}
inline void TenInt64Model::set_int64value2(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64value2(value);
  // @@protoc_insertion_point(field_set:testModel.TenInt64Model.int64Value2)
}

// int64 int64Value3 = 3;
inline void TenInt64Model::clear_int64value3() {
  int64value3_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::_internal_int64value3() const {
  return int64value3_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::int64value3() const {
  // @@protoc_insertion_point(field_get:testModel.TenInt64Model.int64Value3)
  return _internal_int64value3();
}
inline void TenInt64Model::_internal_set_int64value3(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64value3_ = value;
}
inline void TenInt64Model::set_int64value3(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64value3(value);
  // @@protoc_insertion_point(field_set:testModel.TenInt64Model.int64Value3)
}

// int64 int64Value4 = 4;
inline void TenInt64Model::clear_int64value4() {
  int64value4_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::_internal_int64value4() const {
  return int64value4_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::int64value4() const {
  // @@protoc_insertion_point(field_get:testModel.TenInt64Model.int64Value4)
  return _internal_int64value4();
}
inline void TenInt64Model::_internal_set_int64value4(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64value4_ = value;
}
inline void TenInt64Model::set_int64value4(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64value4(value);
  // @@protoc_insertion_point(field_set:testModel.TenInt64Model.int64Value4)
}

// int64 int64Value5 = 5;
inline void TenInt64Model::clear_int64value5() {
  int64value5_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::_internal_int64value5() const {
  return int64value5_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::int64value5() const {
  // @@protoc_insertion_point(field_get:testModel.TenInt64Model.int64Value5)
  return _internal_int64value5();
}
inline void TenInt64Model::_internal_set_int64value5(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64value5_ = value;
}
inline void TenInt64Model::set_int64value5(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64value5(value);
  // @@protoc_insertion_point(field_set:testModel.TenInt64Model.int64Value5)
}

// int64 int64Value6 = 6;
inline void TenInt64Model::clear_int64value6() {
  int64value6_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::_internal_int64value6() const {
  return int64value6_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::int64value6() const {
  // @@protoc_insertion_point(field_get:testModel.TenInt64Model.int64Value6)
  return _internal_int64value6();
}
inline void TenInt64Model::_internal_set_int64value6(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64value6_ = value;
}
inline void TenInt64Model::set_int64value6(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64value6(value);
  // @@protoc_insertion_point(field_set:testModel.TenInt64Model.int64Value6)
}

// int64 int64Value7 = 7;
inline void TenInt64Model::clear_int64value7() {
  int64value7_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::_internal_int64value7() const {
  return int64value7_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::int64value7() const {
  // @@protoc_insertion_point(field_get:testModel.TenInt64Model.int64Value7)
  return _internal_int64value7();
}
inline void TenInt64Model::_internal_set_int64value7(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64value7_ = value;
}
inline void TenInt64Model::set_int64value7(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64value7(value);
  // @@protoc_insertion_point(field_set:testModel.TenInt64Model.int64Value7)
}

// int64 int64Value8 = 8;
inline void TenInt64Model::clear_int64value8() {
  int64value8_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::_internal_int64value8() const {
  return int64value8_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::int64value8() const {
  // @@protoc_insertion_point(field_get:testModel.TenInt64Model.int64Value8)
  return _internal_int64value8();
}
inline void TenInt64Model::_internal_set_int64value8(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64value8_ = value;
}
inline void TenInt64Model::set_int64value8(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64value8(value);
  // @@protoc_insertion_point(field_set:testModel.TenInt64Model.int64Value8)
}

// int64 int64Value9 = 9;
inline void TenInt64Model::clear_int64value9() {
  int64value9_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::_internal_int64value9() const {
  return int64value9_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::int64value9() const {
  // @@protoc_insertion_point(field_get:testModel.TenInt64Model.int64Value9)
  return _internal_int64value9();
}
inline void TenInt64Model::_internal_set_int64value9(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64value9_ = value;
}
inline void TenInt64Model::set_int64value9(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64value9(value);
  // @@protoc_insertion_point(field_set:testModel.TenInt64Model.int64Value9)
}

// int64 int64Value10 = 10;
inline void TenInt64Model::clear_int64value10() {
  int64value10_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::_internal_int64value10() const {
  return int64value10_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TenInt64Model::int64value10() const {
  // @@protoc_insertion_point(field_get:testModel.TenInt64Model.int64Value10)
  return _internal_int64value10();
}
inline void TenInt64Model::_internal_set_int64value10(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64value10_ = value;
}
inline void TenInt64Model::set_int64value10(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64value10(value);
  // @@protoc_insertion_point(field_set:testModel.TenInt64Model.int64Value10)
}

// -------------------------------------------------------------------

// DoubleModel

// double doubleValue = 1;
inline void DoubleModel::clear_doublevalue() {
  doublevalue_ = 0;
}
inline double DoubleModel::_internal_doublevalue() const {
  return doublevalue_;
}
inline double DoubleModel::doublevalue() const {
  // @@protoc_insertion_point(field_get:testModel.DoubleModel.doubleValue)
  return _internal_doublevalue();
}
inline void DoubleModel::_internal_set_doublevalue(double value) {
  
  doublevalue_ = value;
}
inline void DoubleModel::set_doublevalue(double value) {
  _internal_set_doublevalue(value);
  // @@protoc_insertion_point(field_set:testModel.DoubleModel.doubleValue)
}

// -------------------------------------------------------------------

// TenDoubleModel

// double doubleValue1 = 1;
inline void TenDoubleModel::clear_doublevalue1() {
  doublevalue1_ = 0;
}
inline double TenDoubleModel::_internal_doublevalue1() const {
  return doublevalue1_;
}
inline double TenDoubleModel::doublevalue1() const {
  // @@protoc_insertion_point(field_get:testModel.TenDoubleModel.doubleValue1)
  return _internal_doublevalue1();
}
inline void TenDoubleModel::_internal_set_doublevalue1(double value) {
  
  doublevalue1_ = value;
}
inline void TenDoubleModel::set_doublevalue1(double value) {
  _internal_set_doublevalue1(value);
  // @@protoc_insertion_point(field_set:testModel.TenDoubleModel.doubleValue1)
}

// double doubleValue2 = 2;
inline void TenDoubleModel::clear_doublevalue2() {
  doublevalue2_ = 0;
}
inline double TenDoubleModel::_internal_doublevalue2() const {
  return doublevalue2_;
}
inline double TenDoubleModel::doublevalue2() const {
  // @@protoc_insertion_point(field_get:testModel.TenDoubleModel.doubleValue2)
  return _internal_doublevalue2();
}
inline void TenDoubleModel::_internal_set_doublevalue2(double value) {
  
  doublevalue2_ = value;
}
inline void TenDoubleModel::set_doublevalue2(double value) {
  _internal_set_doublevalue2(value);
  // @@protoc_insertion_point(field_set:testModel.TenDoubleModel.doubleValue2)
}

// double doubleValue3 = 3;
inline void TenDoubleModel::clear_doublevalue3() {
  doublevalue3_ = 0;
}
inline double TenDoubleModel::_internal_doublevalue3() const {
  return doublevalue3_;
}
inline double TenDoubleModel::doublevalue3() const {
  // @@protoc_insertion_point(field_get:testModel.TenDoubleModel.doubleValue3)
  return _internal_doublevalue3();
}
inline void TenDoubleModel::_internal_set_doublevalue3(double value) {
  
  doublevalue3_ = value;
}
inline void TenDoubleModel::set_doublevalue3(double value) {
  _internal_set_doublevalue3(value);
  // @@protoc_insertion_point(field_set:testModel.TenDoubleModel.doubleValue3)
}

// double doubleValue4 = 4;
inline void TenDoubleModel::clear_doublevalue4() {
  doublevalue4_ = 0;
}
inline double TenDoubleModel::_internal_doublevalue4() const {
  return doublevalue4_;
}
inline double TenDoubleModel::doublevalue4() const {
  // @@protoc_insertion_point(field_get:testModel.TenDoubleModel.doubleValue4)
  return _internal_doublevalue4();
}
inline void TenDoubleModel::_internal_set_doublevalue4(double value) {
  
  doublevalue4_ = value;
}
inline void TenDoubleModel::set_doublevalue4(double value) {
  _internal_set_doublevalue4(value);
  // @@protoc_insertion_point(field_set:testModel.TenDoubleModel.doubleValue4)
}

// double doubleValue5 = 5;
inline void TenDoubleModel::clear_doublevalue5() {
  doublevalue5_ = 0;
}
inline double TenDoubleModel::_internal_doublevalue5() const {
  return doublevalue5_;
}
inline double TenDoubleModel::doublevalue5() const {
  // @@protoc_insertion_point(field_get:testModel.TenDoubleModel.doubleValue5)
  return _internal_doublevalue5();
}
inline void TenDoubleModel::_internal_set_doublevalue5(double value) {
  
  doublevalue5_ = value;
}
inline void TenDoubleModel::set_doublevalue5(double value) {
  _internal_set_doublevalue5(value);
  // @@protoc_insertion_point(field_set:testModel.TenDoubleModel.doubleValue5)
}

// double doubleValue6 = 6;
inline void TenDoubleModel::clear_doublevalue6() {
  doublevalue6_ = 0;
}
inline double TenDoubleModel::_internal_doublevalue6() const {
  return doublevalue6_;
}
inline double TenDoubleModel::doublevalue6() const {
  // @@protoc_insertion_point(field_get:testModel.TenDoubleModel.doubleValue6)
  return _internal_doublevalue6();
}
inline void TenDoubleModel::_internal_set_doublevalue6(double value) {
  
  doublevalue6_ = value;
}
inline void TenDoubleModel::set_doublevalue6(double value) {
  _internal_set_doublevalue6(value);
  // @@protoc_insertion_point(field_set:testModel.TenDoubleModel.doubleValue6)
}

// double doubleValue7 = 7;
inline void TenDoubleModel::clear_doublevalue7() {
  doublevalue7_ = 0;
}
inline double TenDoubleModel::_internal_doublevalue7() const {
  return doublevalue7_;
}
inline double TenDoubleModel::doublevalue7() const {
  // @@protoc_insertion_point(field_get:testModel.TenDoubleModel.doubleValue7)
  return _internal_doublevalue7();
}
inline void TenDoubleModel::_internal_set_doublevalue7(double value) {
  
  doublevalue7_ = value;
}
inline void TenDoubleModel::set_doublevalue7(double value) {
  _internal_set_doublevalue7(value);
  // @@protoc_insertion_point(field_set:testModel.TenDoubleModel.doubleValue7)
}

// double doubleValue8 = 8;
inline void TenDoubleModel::clear_doublevalue8() {
  doublevalue8_ = 0;
}
inline double TenDoubleModel::_internal_doublevalue8() const {
  return doublevalue8_;
}
inline double TenDoubleModel::doublevalue8() const {
  // @@protoc_insertion_point(field_get:testModel.TenDoubleModel.doubleValue8)
  return _internal_doublevalue8();
}
inline void TenDoubleModel::_internal_set_doublevalue8(double value) {
  
  doublevalue8_ = value;
}
inline void TenDoubleModel::set_doublevalue8(double value) {
  _internal_set_doublevalue8(value);
  // @@protoc_insertion_point(field_set:testModel.TenDoubleModel.doubleValue8)
}

// double doubleValue9 = 9;
inline void TenDoubleModel::clear_doublevalue9() {
  doublevalue9_ = 0;
}
inline double TenDoubleModel::_internal_doublevalue9() const {
  return doublevalue9_;
}
inline double TenDoubleModel::doublevalue9() const {
  // @@protoc_insertion_point(field_get:testModel.TenDoubleModel.doubleValue9)
  return _internal_doublevalue9();
}
inline void TenDoubleModel::_internal_set_doublevalue9(double value) {
  
  doublevalue9_ = value;
}
inline void TenDoubleModel::set_doublevalue9(double value) {
  _internal_set_doublevalue9(value);
  // @@protoc_insertion_point(field_set:testModel.TenDoubleModel.doubleValue9)
}

// double doubleValue10 = 10;
inline void TenDoubleModel::clear_doublevalue10() {
  doublevalue10_ = 0;
}
inline double TenDoubleModel::_internal_doublevalue10() const {
  return doublevalue10_;
}
inline double TenDoubleModel::doublevalue10() const {
  // @@protoc_insertion_point(field_get:testModel.TenDoubleModel.doubleValue10)
  return _internal_doublevalue10();
}
inline void TenDoubleModel::_internal_set_doublevalue10(double value) {
  
  doublevalue10_ = value;
}
inline void TenDoubleModel::set_doublevalue10(double value) {
  _internal_set_doublevalue10(value);
  // @@protoc_insertion_point(field_set:testModel.TenDoubleModel.doubleValue10)
}

// -------------------------------------------------------------------

// StringModel

// string stringValue = 1;
inline void StringModel::clear_stringvalue() {
  stringvalue_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& StringModel::stringvalue() const {
  // @@protoc_insertion_point(field_get:testModel.StringModel.stringValue)
  return _internal_stringvalue();
}
inline void StringModel::set_stringvalue(const std::string& value) {
  _internal_set_stringvalue(value);
  // @@protoc_insertion_point(field_set:testModel.StringModel.stringValue)
}
inline std::string* StringModel::mutable_stringvalue() {
  // @@protoc_insertion_point(field_mutable:testModel.StringModel.stringValue)
  return _internal_mutable_stringvalue();
}
inline const std::string& StringModel::_internal_stringvalue() const {
  return stringvalue_.Get();
}
inline void StringModel::_internal_set_stringvalue(const std::string& value) {
  
  stringvalue_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void StringModel::set_stringvalue(std::string&& value) {
  
  stringvalue_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.StringModel.stringValue)
}
inline void StringModel::set_stringvalue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringvalue_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.StringModel.stringValue)
}
inline void StringModel::set_stringvalue(const char* value,
    size_t size) {
  
  stringvalue_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.StringModel.stringValue)
}
inline std::string* StringModel::_internal_mutable_stringvalue() {
  
  return stringvalue_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* StringModel::release_stringvalue() {
  // @@protoc_insertion_point(field_release:testModel.StringModel.stringValue)
  return stringvalue_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void StringModel::set_allocated_stringvalue(std::string* stringvalue) {
  if (stringvalue != nullptr) {
    
  } else {
    
  }
  stringvalue_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringvalue,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.StringModel.stringValue)
}
inline std::string* StringModel::unsafe_arena_release_stringvalue() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.StringModel.stringValue)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return stringvalue_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void StringModel::unsafe_arena_set_allocated_stringvalue(
    std::string* stringvalue) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (stringvalue != nullptr) {
    
  } else {
    
  }
  stringvalue_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      stringvalue, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.StringModel.stringValue)
}

// -------------------------------------------------------------------

// TenStringModel

// string stringValue1 = 1;
inline void TenStringModel::clear_stringvalue1() {
  stringvalue1_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TenStringModel::stringvalue1() const {
  // @@protoc_insertion_point(field_get:testModel.TenStringModel.stringValue1)
  return _internal_stringvalue1();
}
inline void TenStringModel::set_stringvalue1(const std::string& value) {
  _internal_set_stringvalue1(value);
  // @@protoc_insertion_point(field_set:testModel.TenStringModel.stringValue1)
}
inline std::string* TenStringModel::mutable_stringvalue1() {
  // @@protoc_insertion_point(field_mutable:testModel.TenStringModel.stringValue1)
  return _internal_mutable_stringvalue1();
}
inline const std::string& TenStringModel::_internal_stringvalue1() const {
  return stringvalue1_.Get();
}
inline void TenStringModel::_internal_set_stringvalue1(const std::string& value) {
  
  stringvalue1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TenStringModel::set_stringvalue1(std::string&& value) {
  
  stringvalue1_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.TenStringModel.stringValue1)
}
inline void TenStringModel::set_stringvalue1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringvalue1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.TenStringModel.stringValue1)
}
inline void TenStringModel::set_stringvalue1(const char* value,
    size_t size) {
  
  stringvalue1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.TenStringModel.stringValue1)
}
inline std::string* TenStringModel::_internal_mutable_stringvalue1() {
  
  return stringvalue1_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TenStringModel::release_stringvalue1() {
  // @@protoc_insertion_point(field_release:testModel.TenStringModel.stringValue1)
  return stringvalue1_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TenStringModel::set_allocated_stringvalue1(std::string* stringvalue1) {
  if (stringvalue1 != nullptr) {
    
  } else {
    
  }
  stringvalue1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringvalue1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.TenStringModel.stringValue1)
}
inline std::string* TenStringModel::unsafe_arena_release_stringvalue1() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.TenStringModel.stringValue1)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return stringvalue1_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TenStringModel::unsafe_arena_set_allocated_stringvalue1(
    std::string* stringvalue1) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (stringvalue1 != nullptr) {
    
  } else {
    
  }
  stringvalue1_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      stringvalue1, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.TenStringModel.stringValue1)
}

// string stringValue2 = 2;
inline void TenStringModel::clear_stringvalue2() {
  stringvalue2_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TenStringModel::stringvalue2() const {
  // @@protoc_insertion_point(field_get:testModel.TenStringModel.stringValue2)
  return _internal_stringvalue2();
}
inline void TenStringModel::set_stringvalue2(const std::string& value) {
  _internal_set_stringvalue2(value);
  // @@protoc_insertion_point(field_set:testModel.TenStringModel.stringValue2)
}
inline std::string* TenStringModel::mutable_stringvalue2() {
  // @@protoc_insertion_point(field_mutable:testModel.TenStringModel.stringValue2)
  return _internal_mutable_stringvalue2();
}
inline const std::string& TenStringModel::_internal_stringvalue2() const {
  return stringvalue2_.Get();
}
inline void TenStringModel::_internal_set_stringvalue2(const std::string& value) {
  
  stringvalue2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TenStringModel::set_stringvalue2(std::string&& value) {
  
  stringvalue2_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.TenStringModel.stringValue2)
}
inline void TenStringModel::set_stringvalue2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringvalue2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.TenStringModel.stringValue2)
}
inline void TenStringModel::set_stringvalue2(const char* value,
    size_t size) {
  
  stringvalue2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.TenStringModel.stringValue2)
}
inline std::string* TenStringModel::_internal_mutable_stringvalue2() {
  
  return stringvalue2_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TenStringModel::release_stringvalue2() {
  // @@protoc_insertion_point(field_release:testModel.TenStringModel.stringValue2)
  return stringvalue2_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TenStringModel::set_allocated_stringvalue2(std::string* stringvalue2) {
  if (stringvalue2 != nullptr) {
    
  } else {
    
  }
  stringvalue2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringvalue2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.TenStringModel.stringValue2)
}
inline std::string* TenStringModel::unsafe_arena_release_stringvalue2() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.TenStringModel.stringValue2)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return stringvalue2_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TenStringModel::unsafe_arena_set_allocated_stringvalue2(
    std::string* stringvalue2) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (stringvalue2 != nullptr) {
    
  } else {
    
  }
  stringvalue2_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      stringvalue2, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.TenStringModel.stringValue2)
}

// string stringValue3 = 3;
inline void TenStringModel::clear_stringvalue3() {
  stringvalue3_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TenStringModel::stringvalue3() const {
  // @@protoc_insertion_point(field_get:testModel.TenStringModel.stringValue3)
  return _internal_stringvalue3();
}
inline void TenStringModel::set_stringvalue3(const std::string& value) {
  _internal_set_stringvalue3(value);
  // @@protoc_insertion_point(field_set:testModel.TenStringModel.stringValue3)
}
inline std::string* TenStringModel::mutable_stringvalue3() {
  // @@protoc_insertion_point(field_mutable:testModel.TenStringModel.stringValue3)
  return _internal_mutable_stringvalue3();
}
inline const std::string& TenStringModel::_internal_stringvalue3() const {
  return stringvalue3_.Get();
}
inline void TenStringModel::_internal_set_stringvalue3(const std::string& value) {
  
  stringvalue3_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TenStringModel::set_stringvalue3(std::string&& value) {
  
  stringvalue3_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.TenStringModel.stringValue3)
}
inline void TenStringModel::set_stringvalue3(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringvalue3_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.TenStringModel.stringValue3)
}
inline void TenStringModel::set_stringvalue3(const char* value,
    size_t size) {
  
  stringvalue3_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.TenStringModel.stringValue3)
}
inline std::string* TenStringModel::_internal_mutable_stringvalue3() {
  
  return stringvalue3_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TenStringModel::release_stringvalue3() {
  // @@protoc_insertion_point(field_release:testModel.TenStringModel.stringValue3)
  return stringvalue3_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TenStringModel::set_allocated_stringvalue3(std::string* stringvalue3) {
  if (stringvalue3 != nullptr) {
    
  } else {
    
  }
  stringvalue3_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringvalue3,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.TenStringModel.stringValue3)
}
inline std::string* TenStringModel::unsafe_arena_release_stringvalue3() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.TenStringModel.stringValue3)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return stringvalue3_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TenStringModel::unsafe_arena_set_allocated_stringvalue3(
    std::string* stringvalue3) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (stringvalue3 != nullptr) {
    
  } else {
    
  }
  stringvalue3_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      stringvalue3, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.TenStringModel.stringValue3)
}

// string stringValue4 = 4;
inline void TenStringModel::clear_stringvalue4() {
  stringvalue4_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TenStringModel::stringvalue4() const {
  // @@protoc_insertion_point(field_get:testModel.TenStringModel.stringValue4)
  return _internal_stringvalue4();
}
inline void TenStringModel::set_stringvalue4(const std::string& value) {
  _internal_set_stringvalue4(value);
  // @@protoc_insertion_point(field_set:testModel.TenStringModel.stringValue4)
}
inline std::string* TenStringModel::mutable_stringvalue4() {
  // @@protoc_insertion_point(field_mutable:testModel.TenStringModel.stringValue4)
  return _internal_mutable_stringvalue4();
}
inline const std::string& TenStringModel::_internal_stringvalue4() const {
  return stringvalue4_.Get();
}
inline void TenStringModel::_internal_set_stringvalue4(const std::string& value) {
  
  stringvalue4_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TenStringModel::set_stringvalue4(std::string&& value) {
  
  stringvalue4_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.TenStringModel.stringValue4)
}
inline void TenStringModel::set_stringvalue4(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringvalue4_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.TenStringModel.stringValue4)
}
inline void TenStringModel::set_stringvalue4(const char* value,
    size_t size) {
  
  stringvalue4_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.TenStringModel.stringValue4)
}
inline std::string* TenStringModel::_internal_mutable_stringvalue4() {
  
  return stringvalue4_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TenStringModel::release_stringvalue4() {
  // @@protoc_insertion_point(field_release:testModel.TenStringModel.stringValue4)
  return stringvalue4_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TenStringModel::set_allocated_stringvalue4(std::string* stringvalue4) {
  if (stringvalue4 != nullptr) {
    
  } else {
    
  }
  stringvalue4_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringvalue4,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.TenStringModel.stringValue4)
}
inline std::string* TenStringModel::unsafe_arena_release_stringvalue4() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.TenStringModel.stringValue4)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return stringvalue4_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TenStringModel::unsafe_arena_set_allocated_stringvalue4(
    std::string* stringvalue4) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (stringvalue4 != nullptr) {
    
  } else {
    
  }
  stringvalue4_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      stringvalue4, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.TenStringModel.stringValue4)
}

// string stringValue5 = 5;
inline void TenStringModel::clear_stringvalue5() {
  stringvalue5_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TenStringModel::stringvalue5() const {
  // @@protoc_insertion_point(field_get:testModel.TenStringModel.stringValue5)
  return _internal_stringvalue5();
}
inline void TenStringModel::set_stringvalue5(const std::string& value) {
  _internal_set_stringvalue5(value);
  // @@protoc_insertion_point(field_set:testModel.TenStringModel.stringValue5)
}
inline std::string* TenStringModel::mutable_stringvalue5() {
  // @@protoc_insertion_point(field_mutable:testModel.TenStringModel.stringValue5)
  return _internal_mutable_stringvalue5();
}
inline const std::string& TenStringModel::_internal_stringvalue5() const {
  return stringvalue5_.Get();
}
inline void TenStringModel::_internal_set_stringvalue5(const std::string& value) {
  
  stringvalue5_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TenStringModel::set_stringvalue5(std::string&& value) {
  
  stringvalue5_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.TenStringModel.stringValue5)
}
inline void TenStringModel::set_stringvalue5(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringvalue5_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.TenStringModel.stringValue5)
}
inline void TenStringModel::set_stringvalue5(const char* value,
    size_t size) {
  
  stringvalue5_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.TenStringModel.stringValue5)
}
inline std::string* TenStringModel::_internal_mutable_stringvalue5() {
  
  return stringvalue5_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TenStringModel::release_stringvalue5() {
  // @@protoc_insertion_point(field_release:testModel.TenStringModel.stringValue5)
  return stringvalue5_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TenStringModel::set_allocated_stringvalue5(std::string* stringvalue5) {
  if (stringvalue5 != nullptr) {
    
  } else {
    
  }
  stringvalue5_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringvalue5,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.TenStringModel.stringValue5)
}
inline std::string* TenStringModel::unsafe_arena_release_stringvalue5() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.TenStringModel.stringValue5)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return stringvalue5_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TenStringModel::unsafe_arena_set_allocated_stringvalue5(
    std::string* stringvalue5) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (stringvalue5 != nullptr) {
    
  } else {
    
  }
  stringvalue5_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      stringvalue5, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.TenStringModel.stringValue5)
}

// string stringValue6 = 6;
inline void TenStringModel::clear_stringvalue6() {
  stringvalue6_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TenStringModel::stringvalue6() const {
  // @@protoc_insertion_point(field_get:testModel.TenStringModel.stringValue6)
  return _internal_stringvalue6();
}
inline void TenStringModel::set_stringvalue6(const std::string& value) {
  _internal_set_stringvalue6(value);
  // @@protoc_insertion_point(field_set:testModel.TenStringModel.stringValue6)
}
inline std::string* TenStringModel::mutable_stringvalue6() {
  // @@protoc_insertion_point(field_mutable:testModel.TenStringModel.stringValue6)
  return _internal_mutable_stringvalue6();
}
inline const std::string& TenStringModel::_internal_stringvalue6() const {
  return stringvalue6_.Get();
}
inline void TenStringModel::_internal_set_stringvalue6(const std::string& value) {
  
  stringvalue6_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TenStringModel::set_stringvalue6(std::string&& value) {
  
  stringvalue6_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.TenStringModel.stringValue6)
}
inline void TenStringModel::set_stringvalue6(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringvalue6_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.TenStringModel.stringValue6)
}
inline void TenStringModel::set_stringvalue6(const char* value,
    size_t size) {
  
  stringvalue6_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.TenStringModel.stringValue6)
}
inline std::string* TenStringModel::_internal_mutable_stringvalue6() {
  
  return stringvalue6_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TenStringModel::release_stringvalue6() {
  // @@protoc_insertion_point(field_release:testModel.TenStringModel.stringValue6)
  return stringvalue6_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TenStringModel::set_allocated_stringvalue6(std::string* stringvalue6) {
  if (stringvalue6 != nullptr) {
    
  } else {
    
  }
  stringvalue6_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringvalue6,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.TenStringModel.stringValue6)
}
inline std::string* TenStringModel::unsafe_arena_release_stringvalue6() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.TenStringModel.stringValue6)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return stringvalue6_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TenStringModel::unsafe_arena_set_allocated_stringvalue6(
    std::string* stringvalue6) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (stringvalue6 != nullptr) {
    
  } else {
    
  }
  stringvalue6_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      stringvalue6, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.TenStringModel.stringValue6)
}

// string stringValue7 = 7;
inline void TenStringModel::clear_stringvalue7() {
  stringvalue7_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TenStringModel::stringvalue7() const {
  // @@protoc_insertion_point(field_get:testModel.TenStringModel.stringValue7)
  return _internal_stringvalue7();
}
inline void TenStringModel::set_stringvalue7(const std::string& value) {
  _internal_set_stringvalue7(value);
  // @@protoc_insertion_point(field_set:testModel.TenStringModel.stringValue7)
}
inline std::string* TenStringModel::mutable_stringvalue7() {
  // @@protoc_insertion_point(field_mutable:testModel.TenStringModel.stringValue7)
  return _internal_mutable_stringvalue7();
}
inline const std::string& TenStringModel::_internal_stringvalue7() const {
  return stringvalue7_.Get();
}
inline void TenStringModel::_internal_set_stringvalue7(const std::string& value) {
  
  stringvalue7_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TenStringModel::set_stringvalue7(std::string&& value) {
  
  stringvalue7_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.TenStringModel.stringValue7)
}
inline void TenStringModel::set_stringvalue7(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringvalue7_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.TenStringModel.stringValue7)
}
inline void TenStringModel::set_stringvalue7(const char* value,
    size_t size) {
  
  stringvalue7_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.TenStringModel.stringValue7)
}
inline std::string* TenStringModel::_internal_mutable_stringvalue7() {
  
  return stringvalue7_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TenStringModel::release_stringvalue7() {
  // @@protoc_insertion_point(field_release:testModel.TenStringModel.stringValue7)
  return stringvalue7_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TenStringModel::set_allocated_stringvalue7(std::string* stringvalue7) {
  if (stringvalue7 != nullptr) {
    
  } else {
    
  }
  stringvalue7_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringvalue7,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.TenStringModel.stringValue7)
}
inline std::string* TenStringModel::unsafe_arena_release_stringvalue7() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.TenStringModel.stringValue7)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return stringvalue7_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TenStringModel::unsafe_arena_set_allocated_stringvalue7(
    std::string* stringvalue7) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (stringvalue7 != nullptr) {
    
  } else {
    
  }
  stringvalue7_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      stringvalue7, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.TenStringModel.stringValue7)
}

// string stringValue8 = 8;
inline void TenStringModel::clear_stringvalue8() {
  stringvalue8_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TenStringModel::stringvalue8() const {
  // @@protoc_insertion_point(field_get:testModel.TenStringModel.stringValue8)
  return _internal_stringvalue8();
}
inline void TenStringModel::set_stringvalue8(const std::string& value) {
  _internal_set_stringvalue8(value);
  // @@protoc_insertion_point(field_set:testModel.TenStringModel.stringValue8)
}
inline std::string* TenStringModel::mutable_stringvalue8() {
  // @@protoc_insertion_point(field_mutable:testModel.TenStringModel.stringValue8)
  return _internal_mutable_stringvalue8();
}
inline const std::string& TenStringModel::_internal_stringvalue8() const {
  return stringvalue8_.Get();
}
inline void TenStringModel::_internal_set_stringvalue8(const std::string& value) {
  
  stringvalue8_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TenStringModel::set_stringvalue8(std::string&& value) {
  
  stringvalue8_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.TenStringModel.stringValue8)
}
inline void TenStringModel::set_stringvalue8(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringvalue8_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.TenStringModel.stringValue8)
}
inline void TenStringModel::set_stringvalue8(const char* value,
    size_t size) {
  
  stringvalue8_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.TenStringModel.stringValue8)
}
inline std::string* TenStringModel::_internal_mutable_stringvalue8() {
  
  return stringvalue8_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TenStringModel::release_stringvalue8() {
  // @@protoc_insertion_point(field_release:testModel.TenStringModel.stringValue8)
  return stringvalue8_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TenStringModel::set_allocated_stringvalue8(std::string* stringvalue8) {
  if (stringvalue8 != nullptr) {
    
  } else {
    
  }
  stringvalue8_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringvalue8,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.TenStringModel.stringValue8)
}
inline std::string* TenStringModel::unsafe_arena_release_stringvalue8() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.TenStringModel.stringValue8)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return stringvalue8_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TenStringModel::unsafe_arena_set_allocated_stringvalue8(
    std::string* stringvalue8) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (stringvalue8 != nullptr) {
    
  } else {
    
  }
  stringvalue8_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      stringvalue8, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.TenStringModel.stringValue8)
}

// string stringValue9 = 9;
inline void TenStringModel::clear_stringvalue9() {
  stringvalue9_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TenStringModel::stringvalue9() const {
  // @@protoc_insertion_point(field_get:testModel.TenStringModel.stringValue9)
  return _internal_stringvalue9();
}
inline void TenStringModel::set_stringvalue9(const std::string& value) {
  _internal_set_stringvalue9(value);
  // @@protoc_insertion_point(field_set:testModel.TenStringModel.stringValue9)
}
inline std::string* TenStringModel::mutable_stringvalue9() {
  // @@protoc_insertion_point(field_mutable:testModel.TenStringModel.stringValue9)
  return _internal_mutable_stringvalue9();
}
inline const std::string& TenStringModel::_internal_stringvalue9() const {
  return stringvalue9_.Get();
}
inline void TenStringModel::_internal_set_stringvalue9(const std::string& value) {
  
  stringvalue9_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TenStringModel::set_stringvalue9(std::string&& value) {
  
  stringvalue9_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.TenStringModel.stringValue9)
}
inline void TenStringModel::set_stringvalue9(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringvalue9_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.TenStringModel.stringValue9)
}
inline void TenStringModel::set_stringvalue9(const char* value,
    size_t size) {
  
  stringvalue9_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.TenStringModel.stringValue9)
}
inline std::string* TenStringModel::_internal_mutable_stringvalue9() {
  
  return stringvalue9_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TenStringModel::release_stringvalue9() {
  // @@protoc_insertion_point(field_release:testModel.TenStringModel.stringValue9)
  return stringvalue9_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TenStringModel::set_allocated_stringvalue9(std::string* stringvalue9) {
  if (stringvalue9 != nullptr) {
    
  } else {
    
  }
  stringvalue9_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringvalue9,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.TenStringModel.stringValue9)
}
inline std::string* TenStringModel::unsafe_arena_release_stringvalue9() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.TenStringModel.stringValue9)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return stringvalue9_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TenStringModel::unsafe_arena_set_allocated_stringvalue9(
    std::string* stringvalue9) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (stringvalue9 != nullptr) {
    
  } else {
    
  }
  stringvalue9_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      stringvalue9, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.TenStringModel.stringValue9)
}

// string stringValue10 = 10;
inline void TenStringModel::clear_stringvalue10() {
  stringvalue10_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TenStringModel::stringvalue10() const {
  // @@protoc_insertion_point(field_get:testModel.TenStringModel.stringValue10)
  return _internal_stringvalue10();
}
inline void TenStringModel::set_stringvalue10(const std::string& value) {
  _internal_set_stringvalue10(value);
  // @@protoc_insertion_point(field_set:testModel.TenStringModel.stringValue10)
}
inline std::string* TenStringModel::mutable_stringvalue10() {
  // @@protoc_insertion_point(field_mutable:testModel.TenStringModel.stringValue10)
  return _internal_mutable_stringvalue10();
}
inline const std::string& TenStringModel::_internal_stringvalue10() const {
  return stringvalue10_.Get();
}
inline void TenStringModel::_internal_set_stringvalue10(const std::string& value) {
  
  stringvalue10_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TenStringModel::set_stringvalue10(std::string&& value) {
  
  stringvalue10_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.TenStringModel.stringValue10)
}
inline void TenStringModel::set_stringvalue10(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringvalue10_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.TenStringModel.stringValue10)
}
inline void TenStringModel::set_stringvalue10(const char* value,
    size_t size) {
  
  stringvalue10_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.TenStringModel.stringValue10)
}
inline std::string* TenStringModel::_internal_mutable_stringvalue10() {
  
  return stringvalue10_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TenStringModel::release_stringvalue10() {
  // @@protoc_insertion_point(field_release:testModel.TenStringModel.stringValue10)
  return stringvalue10_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TenStringModel::set_allocated_stringvalue10(std::string* stringvalue10) {
  if (stringvalue10 != nullptr) {
    
  } else {
    
  }
  stringvalue10_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringvalue10,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.TenStringModel.stringValue10)
}
inline std::string* TenStringModel::unsafe_arena_release_stringvalue10() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.TenStringModel.stringValue10)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return stringvalue10_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TenStringModel::unsafe_arena_set_allocated_stringvalue10(
    std::string* stringvalue10) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (stringvalue10 != nullptr) {
    
  } else {
    
  }
  stringvalue10_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      stringvalue10, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.TenStringModel.stringValue10)
}

// -------------------------------------------------------------------

// IntListModel

// repeated int32 intValues = 1 [packed = true];
inline int IntListModel::_internal_intvalues_size() const {
  return intvalues_.size();
}
inline int IntListModel::intvalues_size() const {
  return _internal_intvalues_size();
}
inline void IntListModel::clear_intvalues() {
  intvalues_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IntListModel::_internal_intvalues(int index) const {
  return intvalues_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IntListModel::intvalues(int index) const {
  // @@protoc_insertion_point(field_get:testModel.IntListModel.intValues)
  return _internal_intvalues(index);
}
inline void IntListModel::set_intvalues(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  intvalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:testModel.IntListModel.intValues)
}
inline void IntListModel::_internal_add_intvalues(::PROTOBUF_NAMESPACE_ID::int32 value) {
  intvalues_.Add(value);
}
inline void IntListModel::add_intvalues(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_intvalues(value);
  // @@protoc_insertion_point(field_add:testModel.IntListModel.intValues)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
IntListModel::_internal_intvalues() const {
  return intvalues_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
IntListModel::intvalues() const {
  // @@protoc_insertion_point(field_list:testModel.IntListModel.intValues)
  return _internal_intvalues();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
IntListModel::_internal_mutable_intvalues() {
  return &intvalues_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
IntListModel::mutable_intvalues() {
  // @@protoc_insertion_point(field_mutable_list:testModel.IntListModel.intValues)
  return _internal_mutable_intvalues();
}

// -------------------------------------------------------------------

// FloatListModel

// repeated float floatValues = 1 [packed = true];
inline int FloatListModel::_internal_floatvalues_size() const {
  return floatvalues_.size();
}
inline int FloatListModel::floatvalues_size() const {
  return _internal_floatvalues_size();
}
inline void FloatListModel::clear_floatvalues() {
  floatvalues_.Clear();
}
inline float FloatListModel::_internal_floatvalues(int index) const {
  return floatvalues_.Get(index);
}
inline float FloatListModel::floatvalues(int index) const {
  // @@protoc_insertion_point(field_get:testModel.FloatListModel.floatValues)
  return _internal_floatvalues(index);
}
inline void FloatListModel::set_floatvalues(int index, float value) {
  floatvalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:testModel.FloatListModel.floatValues)
}
inline void FloatListModel::_internal_add_floatvalues(float value) {
  floatvalues_.Add(value);
}
inline void FloatListModel::add_floatvalues(float value) {
  _internal_add_floatvalues(value);
  // @@protoc_insertion_point(field_add:testModel.FloatListModel.floatValues)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
FloatListModel::_internal_floatvalues() const {
  return floatvalues_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
FloatListModel::floatvalues() const {
  // @@protoc_insertion_point(field_list:testModel.FloatListModel.floatValues)
  return _internal_floatvalues();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
FloatListModel::_internal_mutable_floatvalues() {
  return &floatvalues_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
FloatListModel::mutable_floatvalues() {
  // @@protoc_insertion_point(field_mutable_list:testModel.FloatListModel.floatValues)
  return _internal_mutable_floatvalues();
}

// -------------------------------------------------------------------

// StringListModel

// repeated string stringValues = 1;
inline int StringListModel::_internal_stringvalues_size() const {
  return stringvalues_.size();
}
inline int StringListModel::stringvalues_size() const {
  return _internal_stringvalues_size();
}
inline void StringListModel::clear_stringvalues() {
  stringvalues_.Clear();
}
inline std::string* StringListModel::add_stringvalues() {
  // @@protoc_insertion_point(field_add_mutable:testModel.StringListModel.stringValues)
  return _internal_add_stringvalues();
}
inline const std::string& StringListModel::_internal_stringvalues(int index) const {
  return stringvalues_.Get(index);
}
inline const std::string& StringListModel::stringvalues(int index) const {
  // @@protoc_insertion_point(field_get:testModel.StringListModel.stringValues)
  return _internal_stringvalues(index);
}
inline std::string* StringListModel::mutable_stringvalues(int index) {
  // @@protoc_insertion_point(field_mutable:testModel.StringListModel.stringValues)
  return stringvalues_.Mutable(index);
}
inline void StringListModel::set_stringvalues(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:testModel.StringListModel.stringValues)
  stringvalues_.Mutable(index)->assign(value);
}
inline void StringListModel::set_stringvalues(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:testModel.StringListModel.stringValues)
  stringvalues_.Mutable(index)->assign(std::move(value));
}
inline void StringListModel::set_stringvalues(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  stringvalues_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:testModel.StringListModel.stringValues)
}
inline void StringListModel::set_stringvalues(int index, const char* value, size_t size) {
  stringvalues_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:testModel.StringListModel.stringValues)
}
inline std::string* StringListModel::_internal_add_stringvalues() {
  return stringvalues_.Add();
}
inline void StringListModel::add_stringvalues(const std::string& value) {
  stringvalues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:testModel.StringListModel.stringValues)
}
inline void StringListModel::add_stringvalues(std::string&& value) {
  stringvalues_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:testModel.StringListModel.stringValues)
}
inline void StringListModel::add_stringvalues(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  stringvalues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:testModel.StringListModel.stringValues)
}
inline void StringListModel::add_stringvalues(const char* value, size_t size) {
  stringvalues_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:testModel.StringListModel.stringValues)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
StringListModel::stringvalues() const {
  // @@protoc_insertion_point(field_list:testModel.StringListModel.stringValues)
  return stringvalues_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
StringListModel::mutable_stringvalues() {
  // @@protoc_insertion_point(field_mutable_list:testModel.StringListModel.stringValues)
  return &stringvalues_;
}

// -------------------------------------------------------------------

// Person_PhoneNumber

// string number = 1;
inline void Person_PhoneNumber::clear_number() {
  number_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& Person_PhoneNumber::number() const {
  // @@protoc_insertion_point(field_get:testModel.Person.PhoneNumber.number)
  return _internal_number();
}
inline void Person_PhoneNumber::set_number(const std::string& value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:testModel.Person.PhoneNumber.number)
}
inline std::string* Person_PhoneNumber::mutable_number() {
  // @@protoc_insertion_point(field_mutable:testModel.Person.PhoneNumber.number)
  return _internal_mutable_number();
}
inline const std::string& Person_PhoneNumber::_internal_number() const {
  return number_.Get();
}
inline void Person_PhoneNumber::_internal_set_number(const std::string& value) {
  
  number_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void Person_PhoneNumber::set_number(std::string&& value) {
  
  number_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.Person.PhoneNumber.number)
}
inline void Person_PhoneNumber::set_number(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  number_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.Person.PhoneNumber.number)
}
inline void Person_PhoneNumber::set_number(const char* value,
    size_t size) {
  
  number_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.Person.PhoneNumber.number)
}
inline std::string* Person_PhoneNumber::_internal_mutable_number() {
  
  return number_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* Person_PhoneNumber::release_number() {
  // @@protoc_insertion_point(field_release:testModel.Person.PhoneNumber.number)
  return number_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Person_PhoneNumber::set_allocated_number(std::string* number) {
  if (number != nullptr) {
    
  } else {
    
  }
  number_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), number,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.Person.PhoneNumber.number)
}
inline std::string* Person_PhoneNumber::unsafe_arena_release_number() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.Person.PhoneNumber.number)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return number_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void Person_PhoneNumber::unsafe_arena_set_allocated_number(
    std::string* number) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (number != nullptr) {
    
  } else {
    
  }
  number_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      number, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.Person.PhoneNumber.number)
}

// -------------------------------------------------------------------

// Person

// string name = 1;
inline void Person::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& Person::name() const {
  // @@protoc_insertion_point(field_get:testModel.Person.name)
  return _internal_name();
}
inline void Person::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:testModel.Person.name)
}
inline std::string* Person::mutable_name() {
  // @@protoc_insertion_point(field_mutable:testModel.Person.name)
  return _internal_mutable_name();
}
inline const std::string& Person::_internal_name() const {
  return name_.Get();
}
inline void Person::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void Person::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.Person.name)
}
inline void Person::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.Person.name)
}
inline void Person::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.Person.name)
}
inline std::string* Person::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* Person::release_name() {
  // @@protoc_insertion_point(field_release:testModel.Person.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Person::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.Person.name)
}
inline std::string* Person::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.Person.name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void Person::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.Person.name)
}

// float id = 2;
inline void Person::clear_id() {
  id_ = 0;
}
inline float Person::_internal_id() const {
  return id_;
}
inline float Person::id() const {
  // @@protoc_insertion_point(field_get:testModel.Person.id)
  return _internal_id();
}
inline void Person::_internal_set_id(float value) {
  
  id_ = value;
}
inline void Person::set_id(float value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:testModel.Person.id)
}

// string email = 3;
inline void Person::clear_email() {
  email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& Person::email() const {
  // @@protoc_insertion_point(field_get:testModel.Person.email)
  return _internal_email();
}
inline void Person::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:testModel.Person.email)
}
inline std::string* Person::mutable_email() {
  // @@protoc_insertion_point(field_mutable:testModel.Person.email)
  return _internal_mutable_email();
}
inline const std::string& Person::_internal_email() const {
  return email_.Get();
}
inline void Person::_internal_set_email(const std::string& value) {
  
  email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void Person::set_email(std::string&& value) {
  
  email_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:testModel.Person.email)
}
inline void Person::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:testModel.Person.email)
}
inline void Person::set_email(const char* value,
    size_t size) {
  
  email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:testModel.Person.email)
}
inline std::string* Person::_internal_mutable_email() {
  
  return email_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* Person::release_email() {
  // @@protoc_insertion_point(field_release:testModel.Person.email)
  return email_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Person::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:testModel.Person.email)
}
inline std::string* Person::unsafe_arena_release_email() {
  // @@protoc_insertion_point(field_unsafe_arena_release:testModel.Person.email)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return email_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void Person::unsafe_arena_set_allocated_email(
    std::string* email) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (email != nullptr) {
    
  } else {
    
  }
  email_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      email, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:testModel.Person.email)
}

// repeated .testModel.Person.PhoneNumber phone = 4;
inline int Person::_internal_phone_size() const {
  return phone_.size();
}
inline int Person::phone_size() const {
  return _internal_phone_size();
}
inline void Person::clear_phone() {
  phone_.Clear();
}
inline ::testModel::Person_PhoneNumber* Person::mutable_phone(int index) {
  // @@protoc_insertion_point(field_mutable:testModel.Person.phone)
  return phone_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::testModel::Person_PhoneNumber >*
Person::mutable_phone() {
  // @@protoc_insertion_point(field_mutable_list:testModel.Person.phone)
  return &phone_;
}
inline const ::testModel::Person_PhoneNumber& Person::_internal_phone(int index) const {
  return phone_.Get(index);
}
inline const ::testModel::Person_PhoneNumber& Person::phone(int index) const {
  // @@protoc_insertion_point(field_get:testModel.Person.phone)
  return _internal_phone(index);
}
inline ::testModel::Person_PhoneNumber* Person::_internal_add_phone() {
  return phone_.Add();
}
inline ::testModel::Person_PhoneNumber* Person::add_phone() {
  // @@protoc_insertion_point(field_add:testModel.Person.phone)
  return _internal_add_phone();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::testModel::Person_PhoneNumber >&
Person::phone() const {
  // @@protoc_insertion_point(field_list:testModel.Person.phone)
  return phone_;
}

// -------------------------------------------------------------------

// AddressBook

// repeated .testModel.Person person = 1;
inline int AddressBook::_internal_person_size() const {
  return person_.size();
}
inline int AddressBook::person_size() const {
  return _internal_person_size();
}
inline void AddressBook::clear_person() {
  person_.Clear();
}
inline ::testModel::Person* AddressBook::mutable_person(int index) {
  // @@protoc_insertion_point(field_mutable:testModel.AddressBook.person)
  return person_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::testModel::Person >*
AddressBook::mutable_person() {
  // @@protoc_insertion_point(field_mutable_list:testModel.AddressBook.person)
  return &person_;
}
inline const ::testModel::Person& AddressBook::_internal_person(int index) const {
  return person_.Get(index);
}
inline const ::testModel::Person& AddressBook::person(int index) const {
  // @@protoc_insertion_point(field_get:testModel.AddressBook.person)
  return _internal_person(index);
}
inline ::testModel::Person* AddressBook::_internal_add_person() {
  return person_.Add();
}
inline ::testModel::Person* AddressBook::add_person() {
  // @@protoc_insertion_point(field_add:testModel.AddressBook.person)
  return _internal_add_person();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::testModel::Person >&
AddressBook::person() const {
  // @@protoc_insertion_point(field_list:testModel.AddressBook.person)
  return person_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace testModel

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_5fmodels_2ftestModel_2eproto
